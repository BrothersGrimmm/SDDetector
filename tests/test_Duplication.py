#!/usr/bin/env python


import unittest

from SDDetector.Entities.Duplication import Duplication
from SDDetector.Entities.Region import Region

class TestDuplication(unittest.TestCase):

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def test_dSeqToSeq(self):
        """Duplication with alignment"""

        dSeqToSeq = {}
        dup = Duplication('seq1',1,167,'seq1',1,167,[(Region('seq1',1,167,1),Region('seq1',1,167,1))],[('ATGATGCTCGTAGAGAGCGCTCGCCGTAGAGGATAGTGCGGCTCGATGATGAAGTCGCTGTTTTGGCTGTAGGATAGCGGTGGTCTCGATTAGCCTAGAGGATAATTATAGCTCGTCAAAATTTTATATGTCGCCTAGATAGTCTCCGATTAGATCGGCTAGGATCG','ATGATGCTCGTAGAGAGCGCTCGCCGTAGAGGATAGTGCGGCTCGATGATGAAGTCGCTGTTTTGGCTGTAGGATAGCGGTGGTCTCGATTAGCCTAGAGGATAATTATAGCTCGTCAAAATTTTATATGTCGCCTAGATAGTCTCCGATTAGATCGGCTAGGATCG')]) 

        self.maxDiff = None
        #self.assertEqual(dSeqToSeq,dup.dSeqToSeq)

        dSeqToSeq = {}
        dup =  Duplication('seq2',288,351,'seq2',54,118,[(Region('seq2',288,351,-1),Region('seq2',54,118,1))],[('TGA-AGTCGCT-GTTTTGGCTGTAGGATAGCGGTGGTCTCGATTAGCCTAGAGGATAATTATAGCT','TGATAGT-GCTGGTTTTGGCTGTAGGATAGCGGTGGTCTCGATTAGCCTAGAGGATAATTATAGCT')])
 
        self.maxDiff = None
#        self.assertEqual(dSeqToSeq,dup.dSeqToSeq)

        dSeqToSeq = {}
        dup = Duplication('seq1',1,164,'seq2',237,400,[(Region('seq1',1,164,-1),Region('seq2',237,400,1))],[('TCCTAGCCGATCTAATCGGAGACTATCTAGGCGACATATAAAATTTTGACGAGCTATAATTATCCTCTAGGCTAATCGAGACCACCGCTATCCTACAGCCAAAACAGCGACTTCATCATCGAGCCGCACTATCCTCTACGGCGAGCGCTCTCTACGAGCATCAT','TCCTAGCCGATCTAATCGGAGACTATCTAGGCGACATATAAAATTTTGACGAGCTATAATTATCCTCTAGGCTAATCGAGACCACCGCTATCCTACAGCCAAAACAGCGACTTCATCATCGAGCCGCACTATCCTCTACGGCGAGCGCTCTCTACGAGCATCAT')])
 
#                iBlastXMLParser = BlastXMLParser("test-data/blast.xml")
#        lRegions = [(Region('seq1',1,167,1),Region('seq1',1,167,1)),
#                    (Region('seq1',1,164,-1),Region('seq2',237,400,1)),
#                    (Region('seq2',288,351,-1),Region('seq2',54,118,1))]
#        lAlignments = [('ATGATGCTCGTAGAGAGCGCTCGCCGTAGAGGATAGTGCGGCTCGATGATGAAGTCGCTGTTTTGGCTGTAGGATAGCGGTGGTCTCGATTAGCCTAGAGGATAATTATAGCTCGTCAAAATTTTATATGTCGCCTAGATAGTCTCCGATTAGATCGGCTAGGATCG','ATGATGCTCGTAGAGAGCGCTCGCCGTAGAGGATAGTGCGGCTCGATGATGAAGTCGCTGTTTTGGCTGTAGGATAGCGGTGGTCTCGATTAGCCTAGAGGATAATTATAGCTCGTCAAAATTTTATATGTCGCCTAGATAGTCTCCGATTAGATCGGCTAGGATCG'),
 #                      ('TCCTAGCCGATCTAATCGGAGACTATCTAGGCGACATATAAAATTTTGACGAGCTATAATTATCCTCTAGGCTAATCGAGACCACCGCTATCCTACAGCCAAAACAGCGACTTCATCATCGAGCCGCACTATCCTCTACGGCGAGCGCTCTCTACGAGCATCAT','TCCTAGCCGATCTAATCGGAGACTATCTAGGCGACATATAAAATTTTGACGAGCTATAATTATCCTCTAGGCTAATCGAGACCACCGCTATCCTACAGCCAAAACAGCGACTTCATCATCGAGCCGCACTATCCTCTACGGCGAGCGCTCTCTACGAGCATCAT'),
  #                     ('TGA-AGTCGCT-GTTTTGGCTGTAGGATAGCGGTGGTCTCGATTAGCCTAGAGGATAATTATAGCT','TGATAGT-GCTGGTTTTGGCTGTAGGATAGCGGTGGTCTCGATTAGCCTAGAGGATAATTATAGCT')]

        self.maxDiff = None
#        self.assertEqual(dSeqToSeq,dup.dSeqToSeq)

    def test_getSeqAlignment(self):
        """test"""

        dup = Duplication('seq1',1,164,'seq2',237,400,[(Region('seq1',1,164,1),Region('seq2',237,400,1))],[('TCCTAGCCGATCTAATCGGAGACTATCTAGGCGACATATAAAATTTTGACGAGCTATAATTATCCTCTAGGCTAATCGAGACCACCGCTATCCTACAGCCAAAACAGCGACTTCATCATCGAGCCGCACTATCCTCTACGGCGAGCGCTCTCTACGAGCATCAT','TCCTAGCCGATCTAATCGGAGACTATCTAGGCGACATATAAAATTTTGACGAGCTATAATTATCCTCTAGGCTAATCGAGACCACCGCTATCCTACAGCCAAAACAGCGACTTCATCATCGAGCCGCACTATCCTCTACGGCGAGCGCTCTCTACGAGCATCAT')])
        
        self.assertEquals('TCCT',dup.getSeqAlignment('seq1',1,4))
 
        dup = Duplication('seq1',1,164,'seq2',237,400,[(Region('seq1',1,164,-1),Region('seq2',237,400,1))],[('TCCTAGCCGATCTAATCGGAGACTATCTAGGCGACATATAAAATTTTGACGAGCTATAATTATCCTCTAGGCTAATCGAGACCACCGCTATCCTACAGCCAAAACAGCGACTTCATCATCGAGCCGCACTATCCTCTACGGCGAGCGCTCTCTACGAGCATCAT','TCCTAGCCGATCTAATCGGAGACTATCTAGGCGACATATAAAATTTTGACGAGCTATAATTATCCTCTAGGCTAATCGAGACCACCGCTATCCTACAGCCAAAACAGCGACTTCATCATCGAGCCGCACTATCCTCTACGGCGAGCGCTCTCTACGAGCATCAT')])
        
        self.assertEquals('TCAT',dup.getSeqAlignment('seq1',1,4)) 

        dup = Duplication('seq4',1,40,'seq5',20,30,[(Region('seq4',1,10,-1),Region('seq5',20,25,1)),(Region('seq4',35,40,-1),Region('seq5',25,30,1))],[('ATATATATAT','AT----ATAT'),('ATGT-TT','AT-TTTG')])

        self.assertEquals('ATGT',dup.getSeqAlignment('seq4',37,40)) 
        self.assertEquals('T----ATAT',dup.getSeqAlignment('seq5',21,25)) 

if __name__ == "__main__":
    suite = unittest.TestLoader().loadTestsFromTestCase(TestDuplication)
    unittest.TextTestRunner(verbosity=2).run(suite)

